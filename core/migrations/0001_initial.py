# Generated by Django 5.2.3 on 2025-06-21 16:23

import django.db.models.deletion
import django.utils.timezone
import pictures.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('icon_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('icon_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('icon', pictures.models.PictureField(aspect_ratios=[None, '1/1'], blank=True, breakpoints={'l': 1200, 'm': 992, 's': 768, 'xl': 1400, 'xs': 576}, container_width=1200, file_types=['WEBP'], grid_columns=12, height_field='icon_height', null=True, pixel_densities=[1, 2], upload_to='badges/icons/', verbose_name='Icône', width_field='icon_width')),
                ('level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('expert', 'Expert')], max_length=20, verbose_name='Niveau')),
                ('description', models.TextField(verbose_name='Description')),
                ('qr_code_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('qr_code_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('qr_code', pictures.models.PictureField(aspect_ratios=[None, '1/1'], blank=True, breakpoints={'l': 1200, 'm': 992, 's': 768, 'xl': 1400, 'xs': 576}, container_width=1200, file_types=['WEBP'], grid_columns=12, height_field='qr_code_height', null=True, pixel_densities=[1, 2], upload_to='badges/qrcodes/', verbose_name='QR Code', width_field='qr_code_width')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BadgeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Action')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date et heure')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Détails')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='core.badge', verbose_name='Badge')),
            ],
            options={
                'verbose_name': 'Historique de badge',
                'verbose_name_plural': 'Historiques de badges',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('logo_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('logo_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('logo', pictures.models.PictureField(aspect_ratios=[None, '1/1', '16/9'], blank=True, breakpoints={'l': 1200, 'm': 992, 's': 768, 'xl': 1400, 'xs': 576}, container_width=1200, file_types=['WEBP'], grid_columns=12, height_field='logo_height', null=True, pixel_densities=[1, 2], upload_to='structures/logos/', verbose_name='Logo', width_field='logo_width')),
                ('type', models.CharField(choices=[('association', 'Association'), ('company', 'Entreprise'), ('school', 'École')], max_length=20, verbose_name='Type')),
                ('address', models.TextField(verbose_name='Adresse')),
                ('siret', models.CharField(blank=True, max_length=20, null=True, verbose_name='SIREN/SIRET')),
                ('description', models.TextField(verbose_name='Description')),
                ('referent_last_name', models.CharField(max_length=100, verbose_name='Nom du référent')),
                ('referent_first_name', models.CharField(max_length=100, verbose_name='Prénom du référent')),
                ('referent_position', models.CharField(max_length=100, verbose_name='Poste du référent')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('users', models.ManyToManyField(blank=True, related_name='structures', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateurs')),
            ],
            options={
                'verbose_name': 'Structure',
                'verbose_name_plural': 'Structures',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='badge',
            name='issuing_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_badges', to='core.structure', verbose_name='Structure émettrice'),
        ),
        migrations.AddField(
            model_name='badge',
            name='valid_structures',
            field=models.ManyToManyField(blank=True, related_name='valid_badges', to='core.structure', verbose_name='Structures où ce badge est valable'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar_width', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('avatar_height', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('avatar', pictures.models.PictureField(aspect_ratios=[None, '1/1', '3/2'], blank=True, breakpoints={'l': 1200, 'm': 992, 's': 768, 'xl': 1400, 'xs': 576}, container_width=1200, file_types=['WEBP'], grid_columns=12, height_field='avatar_height', null=True, pixel_densities=[1, 2], upload_to='users/avatars/', verbose_name='Avatar', width_field='avatar_width')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='BadgeAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'attribution")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_badges', to=settings.AUTH_USER_MODEL, verbose_name='Assigné par')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='core.badge', verbose_name='Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badge_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Attribution de badge',
                'verbose_name_plural': 'Attributions de badges',
                'ordering': ['-assigned_date'],
                'unique_together': {('badge', 'user')},
            },
        ),
        migrations.CreateModel(
            name='BadgeEndorsement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endorsed_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'approbation")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorsements', to='core.badge', verbose_name='Badge')),
                ('endorsed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='badge_endorsements', to=settings.AUTH_USER_MODEL, verbose_name='Approuvé par')),
                ('structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorsed_badges', to='core.structure', verbose_name='Structure')),
            ],
            options={
                'verbose_name': 'Approbation de badge',
                'verbose_name_plural': 'Approbations de badges',
                'ordering': ['-endorsed_date'],
                'unique_together': {('badge', 'structure')},
            },
        ),
    ]
